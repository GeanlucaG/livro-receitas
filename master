from moviepy.editor import *
import urllib.request
import requests
import sys
import youtube_dl
import os
from data import insert_into_db


def download_mp3():
    quest = input('Pesquisar: ')
    res = requests.get('https://www.youtube.com/search?=' + ''.join(sys.argv[1:]))
    res.raise_for_status()
    quest = quest.replace(' ', '+')
    data = get_html_page(quest)
    results = get_names_search(data)
    choice = int(input('Escolha sua música: '))
    video_id = choice_music(choice, results)
    url_watch = get_url_watch(video_id)
    video_name = results[1][choice - 1]
    name = video_name + '-' + video_id + ".mp4"
    novo = video_name + '.mp3'
    commit_db(url_watch, novo)
    download(url_watch, name, novo)

def get_names_search(data):
    video_search = data.split('"title":{"runs":[{"text":"')
    code_search = data.split('{"url":"/watch?v=')
    code_results = []
    name_results = []
    for n in range(1, 6):
        code_results.append(code_search[n].split('","webPageType"')[0])
        name_results.append(video_search[n].split('"}],"accessibility"')[0])
        print(f"""{n} - {video_search[n].split('"}],"accessibility"')[0]}"""
              .replace('\\\\u0026', '&')
              .replace('\\xc3\\xa7', 'ç')
              .replace('\\xc3\\xa3', 'ã')
              .replace('\\xc3\\xab', 'ë')
              )
    results = [code_results, name_results]
    return results


def choice_music(choice, results):
    choice = choice - 1
    return results[0][choice]


def get_url_watch(video_id):
    donn = 'https://www.youtube.com/watch?v=' + video_id
    return donn


def get_html_page(quest):
    url = "https://www.youtube.com/results?search_query=" + quest
    page = urllib.request.urlopen(url)
    data = str(page.read())
    return data


def download(url_watch, name, novo):
    ydl_opts = {}
    with youtube_dl.YoutubeDL(ydl_opts) as ydl:

        ydl.download([url_watch])

        if '\\u0026' in name:
            name = name.replace('\\\\u0026', '&')
            novo = novo.replace('\\\\u0026', '&')

        elif '\\xc3\\xa7' and '\\xc3\\xa3' in name:
            name = name.replace('\\xc3\\xa7', 'ç').replace('\\xc3\\xa3', 'ã')
            novo = novo.replace('\\xc3\\xa7', 'ç').replace('\\xc3\\xa3', 'ã')

        elif '\\xc3\\xab' in name:
            name = name.replace('\\xc3\\xab', 'ë')
            novo = novo.replace('\\xc3\\xab', 'ë')

        mp3_converter(name, novo)
        remove_mp4(name)


def mp3_converter(name, novo):
    with VideoFileClip(os.path.join(name)) as clip:
        clip.audio.write_audiofile(os.path.join(novo))


def remove_mp4(name):
    os.remove(name)


def commit_db(url_watch, novo):
    val = (url_watch, novo)
    insert_into_db('DESKTOP-JJO8LEQ;', 'remusic;', val)


if __name__ == '__main__':
   download_mp3()
